package wtf.l4j.impl.modules.exploit;

import de.florianmichael.dietrichevents2.DietrichEvents2;
import net.minecraft.network.packet.c2s.play.*;
import wtf.l4j.api.event.PacketListener;
import wtf.l4j.api.event.Type;
import wtf.l4j.api.module.Category;
import wtf.l4j.api.module.Module;
import wtf.l4j.api.module.ModuleInfo;
import wtf.l4j.api.module.option.options.OptionBoolean;

@ModuleInfo(name = "PacketCanceller", desc = "Cancels Packets", category = Category.EXPLOIT)
public class PacketCanceller extends Module implements PacketListener {

    private OptionBoolean interactWithBlock = new OptionBoolean("InteractWithBlock", true);
    private OptionBoolean interactWithEntity = new OptionBoolean("InteractWithEntity", true);
    private OptionBoolean interactWithItem = new OptionBoolean("InteractWithItem", true);
    private OptionBoolean playerAction = new OptionBoolean("PlayerAction", true);
    private OptionBoolean playerMove = new OptionBoolean("PlayerMove", true);
    private OptionBoolean keepAlive = new OptionBoolean("KeepAlive", true);



    public PacketCanceller(){
        addOptions(interactWithBlock, interactWithEntity, interactWithItem, playerAction, playerMove, keepAlive);
    }

    @Override
    public void onEnable() {
        DietrichEvents2.global().subscribe(PacketEvent.ID, this);
        super.onEnable();
    }

    @Override
    public void onDisable() {
        DietrichEvents2.global().unsubscribe(PacketEvent.ID, this);
        super.onDisable();
    }

    @Override
    public void onPacket(PacketEvent packetEvent) {
        if(packetEvent.getType() ==  Type.OUTGOING){
            if(packetEvent.getPacket() instanceof PlayerInteractBlockC2SPacket && interactWithBlock.isEnabled()){
                packetEvent.cancel();
            }
            if(packetEvent.getPacket() instanceof PlayerInteractEntityC2SPacket && interactWithEntity.isEnabled()){
                packetEvent.cancel();
            }
            if(packetEvent.getPacket() instanceof PlayerInteractItemC2SPacket && interactWithItem.isEnabled()){
                packetEvent.cancel();
            }
            if(packetEvent.getPacket() instanceof PlayerActionC2SPacket && playerAction.isEnabled()){
                packetEvent.cancel();
            }
            if(packetEvent.getPacket() instanceof PlayerMoveC2SPacket && playerMove.isEnabled()){
                packetEvent.cancel();
            }
            if(packetEvent.getPacket() instanceof KeepAliveC2SPacket && keepAlive.isEnabled()){
                packetEvent.cancel();
            }
        }
    }
}
